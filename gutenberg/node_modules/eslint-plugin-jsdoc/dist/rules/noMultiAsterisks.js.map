{"version":3,"sources":["../../src/rules/noMultiAsterisks.js"],"names":["middleAsterisksBlockWS","middleAsterisksNoBlockWS","endAsterisksSingleLineBlockWS","endAsterisksMultipleLineBlockWS","endAsterisksSingleLineNoBlockWS","endAsterisksMultipleLineNoBlockWS","context","jsdoc","utils","allowWhitespace","preventAtEnd","preventAtMiddleLines","options","middleAsterisks","source","some","tokens","number","delimiter","tag","name","type","description","end","postDelimiter","test","fix","replace","reportJSDoc","line","isSingleLineBlock","delim","endAsterisks","endingAsterisksAndSpaces","match","trim","endFix","iterateAllJsdocs","meta","docs","url","fixable","schema","additionalProperies","properties"],"mappings":"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","sourcesContent":["import iterateJsdoc from '../iterateJsdoc';\n\nconst middleAsterisksBlockWS = /^([\\t ]|\\*(?!\\*))+/u;\nconst middleAsterisksNoBlockWS = /^\\*+/u;\n\nconst endAsterisksSingleLineBlockWS = /\\*((?:\\*|(?: |\\t))*)\\*$/u;\nconst endAsterisksMultipleLineBlockWS = /((?:\\*|(?: |\\t))*)\\*$/u;\n\nconst endAsterisksSingleLineNoBlockWS = /\\*(\\**)\\*$/u;\nconst endAsterisksMultipleLineNoBlockWS = /(\\**)\\*$/u;\n\nexport default iterateJsdoc(({\n  context,\n  jsdoc,\n  utils,\n}) => {\n  const {\n    allowWhitespace = false,\n    preventAtEnd = true,\n    preventAtMiddleLines = true,\n  } = context.options[0] || {};\n\n  const middleAsterisks = allowWhitespace ? middleAsterisksNoBlockWS : middleAsterisksBlockWS;\n\n  // eslint-disable-next-line complexity -- Todo\n  jsdoc.source.some(({\n    tokens,\n    number,\n  }) => {\n    const {\n      delimiter,\n      tag,\n      name,\n      type,\n      description,\n      end,\n      postDelimiter,\n    } = tokens;\n\n    if (\n      preventAtMiddleLines &&\n      !end && !tag && !type && !name &&\n      (\n        !allowWhitespace && middleAsterisks.test(description) ||\n        allowWhitespace && middleAsterisks.test(postDelimiter + description)\n      )\n    ) {\n      // console.log('description', JSON.stringify(description));\n      const fix = () => {\n        tokens.description = description.replace(middleAsterisks, '');\n      };\n\n      utils.reportJSDoc(\n        'Should be no multiple asterisks on middle lines.',\n        {\n          line: number,\n        },\n        fix,\n        true,\n      );\n\n      return true;\n    }\n\n    if (!preventAtEnd || !end) {\n      return false;\n    }\n\n    const isSingleLineBlock = delimiter === '/**';\n    const delim = isSingleLineBlock ? '*' : delimiter;\n    let endAsterisks;\n    if (allowWhitespace) {\n      endAsterisks = isSingleLineBlock ? endAsterisksSingleLineNoBlockWS : endAsterisksMultipleLineNoBlockWS;\n    } else {\n      endAsterisks = isSingleLineBlock ? endAsterisksSingleLineBlockWS : endAsterisksMultipleLineBlockWS;\n    }\n\n    const endingAsterisksAndSpaces = (\n      allowWhitespace ? postDelimiter + description + delim : description + delim\n    ).match(\n      endAsterisks,\n    );\n\n    if (\n      !endingAsterisksAndSpaces ||\n      !isSingleLineBlock && endingAsterisksAndSpaces[1] && !endingAsterisksAndSpaces[1].trim()\n    ) {\n      return false;\n    }\n\n    const endFix = () => {\n      if (!isSingleLineBlock) {\n        tokens.delimiter = '';\n      }\n\n      tokens.description = (description + delim).replace(endAsterisks, '');\n    };\n\n    utils.reportJSDoc(\n      'Should be no multiple asterisks on end lines.',\n      {\n        line: number,\n      },\n      endFix,\n      true,\n    );\n\n    return true;\n  });\n}, {\n  iterateAllJsdocs: true,\n  meta: {\n    docs: {\n      description: '',\n      url: 'https://github.com/gajus/eslint-plugin-jsdoc#eslint-plugin-jsdoc-rules-no-multi-asterisks',\n    },\n    fixable: 'code',\n    schema: [\n      {\n        additionalProperies: false,\n        properties: {\n          allowWhitespace: {\n            type: 'boolean',\n          },\n          preventAtEnd: {\n            type: 'boolean',\n          },\n          preventAtMiddleLines: {\n            type: 'boolean',\n          },\n        },\n        type: 'object',\n      },\n    ],\n    type: 'suggestion',\n  },\n});\n"],"file":"noMultiAsterisks.js"}