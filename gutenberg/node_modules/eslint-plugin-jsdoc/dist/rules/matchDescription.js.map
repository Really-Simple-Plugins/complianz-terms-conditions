{"version":3,"sources":["../../src/rules/matchDescription.js"],"names":["matchDescriptionDefault","stringOrDefault","value","userDefault","jsdoc","report","context","utils","mainDescription","matchDescription","message","tags","options","validateDescription","description","tag","mainDescriptionMatch","errorMessage","match","Object","prototype","hasOwnProperty","call","tagValue","tagName","regex","getRegexFromString","test","line","source","number","getDescription","replace","keys","length","hasOptionTag","Boolean","forEachPreferredTag","matchingJsdocTag","targetTagName","name","getTagDescription","trim","whitelistedTags","filterTags","tagsWithNames","tagsWithoutNames","getTagsByType","some","contextDefaults","meta","docs","url","schema","additionalProperties","properties","contexts","items","anyOf","type","comment","oneOf","format","patternProperties","enum"],"mappings":"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","sourcesContent":["import iterateJsdoc from '../iterateJsdoc';\n\n// If supporting Node >= 10, we could loosen the default to this for the\n//   initial letter: \\\\p{Upper}\nconst matchDescriptionDefault = '^[A-Z`\\\\d_][\\\\s\\\\S]*[.?!`]$';\n\nconst stringOrDefault = (value, userDefault) => {\n  return typeof value === 'string' ?\n    value :\n    userDefault || matchDescriptionDefault;\n};\n\nexport default iterateJsdoc(({\n  jsdoc,\n  report,\n  context,\n  utils,\n}) => {\n  const {\n    mainDescription,\n    matchDescription,\n    message,\n    tags,\n  } = context.options[0] || {};\n\n  const validateDescription = (description, tag) => {\n    let mainDescriptionMatch = mainDescription;\n    let errorMessage = message;\n    if (typeof mainDescription === 'object') {\n      mainDescriptionMatch = mainDescription.match;\n      errorMessage = mainDescription.message;\n    }\n\n    if (mainDescriptionMatch === false && (\n      !tag || !Object.prototype.hasOwnProperty.call(tags, tag.tag))\n    ) {\n      return;\n    }\n\n    let tagValue = mainDescriptionMatch;\n    if (tag) {\n      const tagName = tag.tag;\n      if (typeof tags[tagName] === 'object') {\n        tagValue = tags[tagName].match;\n        errorMessage = tags[tagName].message;\n      } else {\n        tagValue = tags[tagName];\n      }\n    }\n\n    const regex = utils.getRegexFromString(\n      stringOrDefault(tagValue, matchDescription),\n    );\n\n    if (!regex.test(description)) {\n      report(\n        errorMessage || 'JSDoc description does not satisfy the regex pattern.',\n        null,\n        tag || {\n          // Add one as description would typically be into block\n          line: jsdoc.source[0].number + 1,\n        },\n      );\n    }\n  };\n\n  if (jsdoc.description) {\n    const {\n      description,\n    } = utils.getDescription();\n    validateDescription(\n      description.replace(/\\s+$/u, ''),\n    );\n  }\n\n  if (!tags || !Object.keys(tags).length) {\n    return;\n  }\n\n  const hasOptionTag = (tagName) => {\n    return Boolean(tags[tagName]);\n  };\n\n  utils.forEachPreferredTag('description', (matchingJsdocTag, targetTagName) => {\n    const description = (matchingJsdocTag.name + ' ' + utils.getTagDescription(matchingJsdocTag)).trim();\n    if (hasOptionTag(targetTagName)) {\n      validateDescription(description, matchingJsdocTag);\n    }\n  }, true);\n\n  const whitelistedTags = utils.filterTags(({\n    tag: tagName,\n  }) => {\n    return hasOptionTag(tagName);\n  });\n  const {\n    tagsWithNames,\n    tagsWithoutNames,\n  } = utils.getTagsByType(whitelistedTags);\n\n  tagsWithNames.some((tag) => {\n    const description = utils.getTagDescription(tag).replace(/^[- ]*/u, '')\n      .trim();\n\n    return validateDescription(description, tag);\n  });\n\n  tagsWithoutNames.some((tag) => {\n    const description = (tag.name + ' ' + utils.getTagDescription(tag)).trim();\n\n    return validateDescription(description, tag);\n  });\n}, {\n  contextDefaults: true,\n  meta: {\n    docs: {\n      description: 'Enforces a regular expression pattern on descriptions.',\n      url: 'https://github.com/gajus/eslint-plugin-jsdoc#eslint-plugin-jsdoc-rules-match-description',\n    },\n    schema: [\n      {\n        additionalProperties: false,\n        properties: {\n          contexts: {\n            items: {\n              anyOf: [\n                {\n                  type: 'string',\n                },\n                {\n                  additionalProperties: false,\n                  properties: {\n                    comment: {\n                      type: 'string',\n                    },\n                    context: {\n                      type: 'string',\n                    },\n                  },\n                  type: 'object',\n                },\n              ],\n            },\n            type: 'array',\n          },\n          mainDescription: {\n            oneOf: [\n              {\n                format: 'regex',\n                type: 'string',\n              },\n              {\n                type: 'boolean',\n              },\n              {\n                additionalProperties: false,\n                properties: {\n                  match: {\n                    oneOf: [\n                      {\n                        format: 'regex',\n                        type: 'string',\n                      },\n                      {\n                        type: 'boolean',\n                      },\n                    ],\n                  },\n                  message: {\n                    type: 'string',\n                  },\n                },\n                type: 'object',\n              },\n            ],\n          },\n          matchDescription: {\n            format: 'regex',\n            type: 'string',\n          },\n          message: {\n            type: 'string',\n          },\n          tags: {\n            patternProperties: {\n              '.*': {\n                oneOf: [\n                  {\n                    format: 'regex',\n                    type: 'string',\n                  },\n                  {\n                    enum: [\n                      true,\n                    ],\n                    type: 'boolean',\n                  },\n                  {\n                    additionalProperties: false,\n                    properties: {\n                      match: {\n                        oneOf: [\n                          {\n                            format: 'regex',\n                            type: 'string',\n                          },\n                          {\n                            enum: [\n                              true,\n                            ],\n                            type: 'boolean',\n                          },\n                        ],\n                      },\n                      message: {\n                        type: 'string',\n                      },\n                    },\n                    type: 'object',\n                  },\n                ],\n              },\n            },\n            type: 'object',\n          },\n        },\n        type: 'object',\n      },\n    ],\n    type: 'suggestion',\n  },\n});\n"],"file":"matchDescription.js"}