{"version":3,"sources":["../../src/rules/emptyTags.js"],"names":["defaultEmptyTags","Set","emptyIfNotClosure","emptyIfClosure","settings","jsdoc","utils","emptyTags","filterTags","tag","tagName","has","hasOptionTag","tags","some","mode","content","name","description","type","trim","fix","setTag","reportJSDoc","checkInternal","checkPrivate","iterateAllJsdocs","meta","docs","url","fixable","schema","additionalProperties","properties","items"],"mappings":";;;;;;;AAAA;;;;AAEA,MAAMA,gBAAgB,GAAG,IAAIC,GAAJ,CAAQ,CAC/B,UAD+B,EACnB,OADmB,EACV,WADU,EACG,QADH,EACa,iBADb,EAE/B,QAF+B,EAErB,OAFqB,EAEZ,UAFY,EAEA,UAFA,EAEY,UAFZ,EAI/B;AACA;AACA,YAN+B,EAQ/B;AACA,UAT+B,CAAR,CAAzB;AAYA,MAAMC,iBAAiB,GAAG,IAAID,GAAJ,CAAQ,CAChC,SADgC,EACrB,SADqB,EACV,WADU,EACG,QADH,EACa,QADb,EAGhC;AACA,YAJgC,CAAR,CAA1B;AAOA,MAAME,cAAc,GAAG,IAAIF,GAAJ,CAAQ,CAC7B,WAD6B,CAAR,CAAvB;;eAIe,2BAAa,CAAC;AAC3BG,EAAAA,QAD2B;AAE3BC,EAAAA,KAF2B;AAG3BC,EAAAA;AAH2B,CAAD,KAItB;AACJ,QAAMC,SAAS,GAAGD,KAAK,CAACE,UAAN,CAAiB,CAAC;AAClCC,IAAAA,GAAG,EAAEC;AAD6B,GAAD,KAE7B;AACJ,WAAOV,gBAAgB,CAACW,GAAjB,CAAqBD,OAArB,KACLJ,KAAK,CAACM,YAAN,CAAmBF,OAAnB,KAA+BL,KAAK,CAACQ,IAAN,CAAWC,IAAX,CAAgB,CAAC;AAC9CL,MAAAA;AAD8C,KAAD,KAEzC;AACJ,aAAOA,GAAG,KAAKC,OAAf;AACD,KAJ8B,CAD1B,IAMLN,QAAQ,CAACW,IAAT,KAAkB,SAAlB,IAA+BZ,cAAc,CAACQ,GAAf,CAAmBD,OAAnB,CAN1B,IAOLN,QAAQ,CAACW,IAAT,KAAkB,SAAlB,IAA+Bb,iBAAiB,CAACS,GAAlB,CAAsBD,OAAtB,CAPjC;AAQD,GAXiB,CAAlB;;AAYA,OAAK,MAAMD,GAAX,IAAkBF,SAAlB,EAA6B;AAC3B,UAAMS,OAAO,GAAGP,GAAG,CAACQ,IAAJ,IAAYR,GAAG,CAACS,WAAhB,IAA+BT,GAAG,CAACU,IAAnD;;AACA,QAAIH,OAAO,CAACI,IAAR,EAAJ,EAAoB;AAClB,YAAMC,GAAG,GAAG,MAAM;AAChBf,QAAAA,KAAK,CAACgB,MAAN,CAAab,GAAb;AACD,OAFD;;AAIAH,MAAAA,KAAK,CAACiB,WAAN,CAAmB,IAAGd,GAAG,CAACA,GAAI,mBAA9B,EAAkDA,GAAlD,EAAuDY,GAAvD,EAA4D,IAA5D;AACD;AACF;AACF,CA3Bc,EA2BZ;AACDG,EAAAA,aAAa,EAAE,IADd;AAEDC,EAAAA,YAAY,EAAE,IAFb;AAGDC,EAAAA,gBAAgB,EAAE,IAHjB;AAIDC,EAAAA,IAAI,EAAE;AACJC,IAAAA,IAAI,EAAE;AACJV,MAAAA,WAAW,EAAE,mDADT;AAEJW,MAAAA,GAAG,EAAE;AAFD,KADF;AAKJC,IAAAA,OAAO,EAAE,MALL;AAMJC,IAAAA,MAAM,EAAE,CACN;AACEC,MAAAA,oBAAoB,EAAE,KADxB;AAEEC,MAAAA,UAAU,EAAE;AACVpB,QAAAA,IAAI,EAAE;AACJqB,UAAAA,KAAK,EAAE;AACLf,YAAAA,IAAI,EAAE;AADD,WADH;AAIJA,UAAAA,IAAI,EAAE;AAJF;AADI,OAFd;AAUEA,MAAAA,IAAI,EAAE;AAVR,KADM,CANJ;AAoBJA,IAAAA,IAAI,EAAE;AApBF;AAJL,CA3BY,C","sourcesContent":["import iterateJsdoc from '../iterateJsdoc';\n\nconst defaultEmptyTags = new Set([\n  'abstract', 'async', 'generator', 'global', 'hideconstructor',\n  'ignore', 'inner', 'instance', 'override', 'readonly',\n\n  // jsdoc doesn't use this form in its docs, but allow for compatibility with\n  //  TypeScript which allows and Closure which requires\n  'inheritDoc',\n\n  // jsdoc doesn't use but allow for TypeScript\n  'internal',\n]);\n\nconst emptyIfNotClosure = new Set([\n  'package', 'private', 'protected', 'public', 'static',\n\n  // Closure doesn't allow with this casing\n  'inheritdoc',\n]);\n\nconst emptyIfClosure = new Set([\n  'interface',\n]);\n\nexport default iterateJsdoc(({\n  settings,\n  jsdoc,\n  utils,\n}) => {\n  const emptyTags = utils.filterTags(({\n    tag: tagName,\n  }) => {\n    return defaultEmptyTags.has(tagName) ||\n      utils.hasOptionTag(tagName) && jsdoc.tags.some(({\n        tag,\n      }) => {\n        return tag === tagName;\n      }) ||\n      settings.mode === 'closure' && emptyIfClosure.has(tagName) ||\n      settings.mode !== 'closure' && emptyIfNotClosure.has(tagName);\n  });\n  for (const tag of emptyTags) {\n    const content = tag.name || tag.description || tag.type;\n    if (content.trim()) {\n      const fix = () => {\n        utils.setTag(tag);\n      };\n\n      utils.reportJSDoc(`@${tag.tag} should be empty.`, tag, fix, true);\n    }\n  }\n}, {\n  checkInternal: true,\n  checkPrivate: true,\n  iterateAllJsdocs: true,\n  meta: {\n    docs: {\n      description: 'Expects specific tags to be empty of any content.',\n      url: 'https://github.com/gajus/eslint-plugin-jsdoc#eslint-plugin-jsdoc-rules-empty-tags',\n    },\n    fixable: 'code',\n    schema: [\n      {\n        additionalProperties: false,\n        properties: {\n          tags: {\n            items: {\n              type: 'string',\n            },\n            type: 'array',\n          },\n        },\n        type: 'object',\n      },\n    ],\n    type: 'suggestion',\n  },\n});\n"],"file":"emptyTags.js"}