import { createElement } from "@wordpress/element";

/**
 * External dependencies
 */
import { View } from 'react-native';
/**
 * WordPress dependencies
 */

import { Children, cloneElement, forwardRef } from '@wordpress/element';
import { usePreferredColorSchemeStyle } from '@wordpress/compose';
/**
 * Internal dependencies
 */

import styles from './style.scss';
export const BlockQuotation = forwardRef((_ref, ref) => {
  let { ...props
  } = _ref;
  const {
    style
  } = props;
  const blockQuoteStyle = [usePreferredColorSchemeStyle(styles.wpBlockQuoteLight, styles.wpBlockQuoteDark), (style === null || style === void 0 ? void 0 : style.color) && {
    borderLeftColor: style.color
  }, style, (style === null || style === void 0 ? void 0 : style.backgroundColor) && styles.paddingWithBackground];
  const colorStyle = style !== null && style !== void 0 && style.color ? {
    color: style.color
  } : {};
  const newChildren = Children.map(props.children, child => {
    if (child && child.props.identifier === 'citation') {
      return cloneElement(child, {
        style: { ...styles.wpBlockQuoteCitation,
          ...colorStyle
        }
      });
    }

    if (child && child.props.identifier === 'value') {
      return cloneElement(child, {
        tagsToEliminate: ['div'],
        style: colorStyle
      });
    }

    return child;
  });
  return createElement(View, {
    ref: ref,
    style: blockQuoteStyle
  }, newChildren);
});
//# sourceMappingURL=index.native.js.map